#!/bin/sh
# shellcheck shell=dash

is_executable_file() {
	test -f "$1" -a -x "$1"
}

set_default_shell() {
	for file in "@TERMUX_PREFIX@/bin/bash" "@TERMUX_PREFIX@/bin/sh" "/system/bin/sh"; do
		if is_executable_file "$file"; then
			SHELL="$file"
			break
		fi
	done
}

if tty >/dev/null 2>&1 && [ $# = 0 ] && [ ! -f ~/.hushlogin ] && [ -z "$TERMUX_HUSHLOGIN" ]; then
	# Use user defined dynamic motd file if it exists
	if [ -f ~/.termux/motd.sh ]; then
		[ ! -x ~/.termux/motd.sh ] && chmod u+x ~/.termux/motd.sh
		~/.termux/motd.sh
	# Default to termux-tools package provided static motd file if it exists
	elif [ -f @TERMUX_PREFIX@/etc/motd ]; then
		cat @TERMUX_PREFIX@/etc/motd
	fi
else
	# This variable shouldn't be kept set.
	unset TERMUX_HUSHLOGIN
fi

# TERMUX_VERSION env variable has been exported since v0.107 and PATH was being set to following value in <0.104. Last playstore version was v0.101.
if tty >/dev/null 2>&1 && [ $# = 0 ] && [ -f @TERMUX_PREFIX@/etc/motd-playstore ] && [ -z "$TERMUX_VERSION" ] && [ "$PATH" = "@TERMUX_PREFIX@/bin:@TERMUX_PREFIX@/bin/applets" ]; then
	printf '\033[0;31m'; cat @TERMUX_PREFIX@/etc/motd-playstore; printf '\033[0m'
fi

unset SHELL
SHELL_FILE=~/.termux/shell

if [ -L "$SHELL_FILE" ]; then
	# Set the symlink's value as the shell target.
	SHELL_TARGET="$(readlink "$SHELL_FILE")"
	if is_executable_file "$SHELL_TARGET" &&
		[ ! "$SHELL_TARGET" -ef "@TERMUX_PREFIX@/bin/login" ]; then
		SHELL="$SHELL_TARGET"
	fi
fi

if [ -z "${SHELL:-}" ]; then
	set_default_shell
fi

export SHELL

# TERMUX_APP_PACKAGE_MANAGER should be exported by termux-app v0.119.0+ itself
if [ -z "${TERMUX_APP_PACKAGE_MANAGER-}" ]; then
	if { [ -n "$(command -v dpkg)" ] && dpkg --compare-versions "$TERMUX_VERSION" lt 0.119.0; } ||   # apt
		{ [ -n "$(command -v vercmp)" ] && [ "$(vercmp "$TERMUX_VERSION" 0.119.0)" = "-1" ]; }; then # pacman
		# For the correct operation of scripts that work with the package manager
		export TERMUX_MAIN_PACKAGE_FORMAT="@TERMUX_PACKAGE_FORMAT@"
	fi
fi

# Export `libtermux-exec-ld-preload.so` for `termux-exec`
# package version `>= 2.0.0`.
# Some devices may not support setting `$LD_PRELOAD`.
# - https://github.com/termux/termux-packages/issues/2066
# - https://github.com/termux/termux-packages/commit/1ec6c042
# - https://github.com/termux/termux-packages/commit/6fb2bb2f
if [ -f "@TERMUX_PREFIX@/lib/libtermux-exec-ld-preload.so" ]; then
	export LD_PRELOAD="@TERMUX_PREFIX@/lib/libtermux-exec-ld-preload.so"
	$SHELL -c "coreutils --coreutils-prog=true" > /dev/null 2>&1 || unset LD_PRELOAD
elif [ -f "@TERMUX_PREFIX@/lib/libtermux-exec.so" ]; then
	export LD_PRELOAD="@TERMUX_PREFIX@/lib/libtermux-exec.so"
	$SHELL -c "coreutils --coreutils-prog=true" > /dev/null 2>&1 || unset LD_PRELOAD
fi

if [ -f @TERMUX_PREFIX@/etc/termux-login.sh ]; then
	. @TERMUX_PREFIX@/etc/termux-login.sh
fi

if [ -n "$TERM" ]; then
	exec "$SHELL" -l "$@"
else
	exec "$SHELL" "$@"
fi
